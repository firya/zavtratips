name: Deploy to VPS
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Build Backend
        run: |
          npm run build:server
          cd server
          echo "--- Listing server/dist directory after build: ---"
          ls -la dist || echo "server/dist directory not found"
          cd ..

      - name: Build Frontend
        run: |
          npm run build
          echo "--- Listing ./dist directory after build: ---"
          ls -la dist || echo "./dist directory not found"

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Deploy to VPS
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          REPO_NAME: ${{ github.event.repository.name }}
          REMOTE_PATH: /opt/apps/${{ github.event.repository.name }}
        run: |
          # Remove existing artifact directories and recreate them empty
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "rm -rf $REMOTE_PATH/server-dist $REMOTE_PATH/client-dist && mkdir -p $REMOTE_PATH/server-dist $REMOTE_PATH/client-dist"

          # Copy contents of build artifacts directly into final directories
          scp -o StrictHostKeyChecking=no -r server/dist/* $SSH_USER@$SSH_HOST:$REMOTE_PATH/server-dist/
          scp -o StrictHostKeyChecking=no -r dist/* $SSH_USER@$SSH_HOST:$REMOTE_PATH/client-dist/
          scp -o StrictHostKeyChecking=no docker-compose.yml $SSH_USER@$SSH_HOST:$REMOTE_PATH/
          scp -o StrictHostKeyChecking=no nginx.conf $SSH_USER@$SSH_HOST:$REMOTE_PATH/

          # Execute remote commands: just down and up
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << EOF
            cd $REMOTE_PATH

            if [ -f .env ]; then chmod 600 .env; fi
            
            docker-compose down
            docker-compose up -d
          EOF